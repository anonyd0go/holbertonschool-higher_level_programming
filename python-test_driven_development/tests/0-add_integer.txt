The ``add_integer`` module
==========================

Using ``add_integer``
---------------------

Importing the module
    >>> add_integer = __import__("0-add_integer").add_integer

Checking the module Docstring
    >>> docstr = __import__("0-add_integer").__doc__
    >>> len(docstr) > 1
    True

Adding two integers
    >>> add_integer(1, 2)
    3

Adding a positive and a negative integer
    >>> add_integer(100, -2)
    98

Adding an integer with the default value for b
    >>> add_integer(2)
    100

Handdling empty args Raise TypeError
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Adding a float and an integer
    >>> add_integer(100.3, -2)
    98

Adding two floats
    >>> add_integer(4.5, 5.5)
    9

Adding a float with the default value for b
    >>> add_integer(4.5)
    102

Handling invalid type for a (string)
    >>> add_integer("4", 5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Handling invalid type for b (string)
    >>> add_integer(4, "5")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Handling with more than 2 args
    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Handling invalid type for a (None)
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Handling invalid type for b (None)
    >>> add_integer(4, None)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer